<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: FSharp.PowerPack | F# Scribbles]]></title>
  <link href="http://udooz.github.io/fsharpscribbles//blog/categories/fsharp-dot-powerpack/atom.xml" rel="self"/>
  <link href="http://udooz.github.io/fsharpscribbles//"/>
  <updated>2014-06-16T19:30:28+05:30</updated>
  <id>http://udooz.github.io/fsharpscribbles//</id>
  <author>
    <name><![CDATA[M Sheik Uduman Ali]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python Numpy array.argsort() in F#]]></title>
    <link href="http://udooz.github.io/fsharpscribbles//blog/2014/06/python-numpy-array-dot-argsort-in-f-number/"/>
    <updated>2014-06-16T11:27:07+05:30</updated>
    <id>http://udooz.github.io/fsharpscribbles//blog/2014/06/python-numpy-array-dot-argsort-in-f-number</id>
    <content type="html"><![CDATA[<p>In Python Numpy, the array.argsort returns the indices that would sort an array.</p>

<p>For example,
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="n">array</span> <span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">argsort</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>will give
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>array([0, 4, 2, 1, 3])</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In F# we can do that as depicted below.</p>

<p>Let there is an array
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='fsharp'><span class='line'><span class="k">let</span> <span class="n">k</span> <span class="o">=</span> <span class="o">[|</span> <span class="mi">1</span><span class="o">;</span> <span class="mi">5</span><span class="o">;</span> <span class="mi">3</span><span class="o">;</span> <span class="mi">7</span><span class="o">;</span> <span class="mi">2</span> <span class="o">|]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To get argsort as like above
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='fsharp'><span class='line'><span class="n">k</span>
</span><span class='line'><span class="o">|&gt;</span> <span class="nn">Array</span><span class="p">.</span><span class="n">mapi</span> <span class="o">(</span><span class="k">fun</span> <span class="n">index</span> <span class="n">value</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="o">;&gt;</span> <span class="o">(</span><span class="n">value</span><span class="o">,</span> <span class="n">index</span><span class="o">))</span>
</span><span class='line'><span class="o">|&gt;</span> <span class="nn">Array</span><span class="p">.</span><span class="n">sort</span>
</span><span class='line'><span class="o">|&gt;</span> <span class="nn">Array</span><span class="p">.</span><span class="n">map</span> <span class="o">(</span><span class="k">fun</span> <span class="n">v</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="o">;&gt;</span> <span class="n">snd</span> <span class="n">v</span><span class="o">);;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Array.mapi helps to return a tuple with first element as array value and second element as index position. This array has been sorted by the first element. Finally Array.map helps to return second element of the tuple. The result is</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>val it : int [] = [|0; 4; 2; 1; 3|]</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Numpy array.sum(axis = 1) in F#]]></title>
    <link href="http://udooz.github.io/fsharpscribbles//blog/2014/06/python-numpy-array-dot-sum-axis-equals-1-in-f-number/"/>
    <updated>2014-06-16T11:20:53+05:30</updated>
    <id>http://udooz.github.io/fsharpscribbles//blog/2014/06/python-numpy-array-dot-sum-axis-equals-1-in-f-number</id>
    <content type="html"><![CDATA[<p>In Python Numpy, the array.sum enables to specify axis over which the sum is taken for elements.</p>

<p>For example,
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="n">array</span> <span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]])</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
will give
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>array([3, 9])</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In F# we can do that with FSharp.PowerPack.</p>

<p>Let us define a method to perform the above feature</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='fsharp'><span class='line'><span class="k">let</span> <span class="n">sumAxis1</span> <span class="o">(</span><span class="n">m</span><span class="o">:</span><span class="n">matrix</span><span class="o">)</span> <span class="o">=&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">let</span> <span class="n">nrow</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="nc">NumRows</span>
</span><span class='line'><span class="nn">Matrix</span><span class="p">.</span><span class="n">foldByRow</span> <span class="o">(</span><span class="k">fun</span> <span class="n">a</span> <span class="n">b</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">a</span><span class="o">+</span> <span class="n">b</span><span class="o">)</span> <span class="o">(</span><span class="nn">Vector</span><span class="p">.</span><span class="n">create</span> <span class="n">nrow</span> <span class="mi">0</span><span class="o">.)</span> <span class="n">m</span> <span class="c1">//fold by row</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Let us apply the above function into a matrix</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='fsharp'><span class='line'><span class="k">let</span> <span class="n">m</span> <span class="o">=</span> <span class="n">matrix</span> <span class="o">[[</span><span class="mi">1</span><span class="o">.;</span><span class="mi">2</span><span class="o">.];</span> <span class="o">[</span><span class="mi">4</span><span class="o">.;</span><span class="mi">5</span><span class="o">.]];;</span>
</span><span class='line'><span class="n">sumAxis1</span> <span class="n">m</span><span class="o">;;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
will give</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>val it : Vector&lt;float> = vector [|3.0; 9.0|]</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
